import renderChart from"./RenderChart.js";import{average,limitDataPoints,longDateToolTipRenderer,shortDateFormatter,htmlToElement,map,addOrIncrement}from"./reportUtils.js";import{renderLineChart,renderPieChart,renderColumnChart}from"./chartTypes.js";import{makeLogsQuery,getAnalyticsData,getUserData}from"./api.js";import loadPage from"../modules/LoadPage.js";const ONE_HOUR=3600000;async function getLogs(a){const b=document.getElementById(a);if(b){const a=await makeLogsQuery({});a.forEach(a=>{const c={time:new Date(a.time),message:a.msg,hostname:a.hostname,req:a.req?{method:a.req.method,url:a.req.url}:null,res:a.res?{status:a.res.statusCode}:null,responseTime:a.responseTime};b.appendChild(htmlToElement(`<pre>${JSON.stringify(c,null,2)}</pre>`))})}}async function getErrorLogs(a){const b=document.getElementById(a);if(b){const a=await makeLogsQuery({find:{"obj.level":{$gt:49}},limit:100,sort:{time:-1},select:""});a.forEach(a=>{b.appendChild(htmlToElement(`<pre>${JSON.stringify(a,null,2)}</pre>`))})}}async function populateUserSignup(a,b){let c=b?a.filter(b):a;let d=c[0].signupTime,e=c[0].signupTime;const f=[],g=31,h=(g-1)/2;for(let k=h;k<c.length-h;k+=1){d=Math.min(d,c[k].signupTime),e=Math.max(e,c[k].signupTime);const a=[];for(let b=-h;b<h;b+=1)a.push(c[k+b].signupTime);const b=[];for(let c=0;c<g-2;c+=1)b.push(a[c+1]-a[c]);f.push({x:c[k].signupTime,y:ONE_HOUR/average(b)})}renderChart("userSignup",{type:"scatter",data:{datasets:[{label:"User signups per hour",pointRadius:2,pointBackgroundColor:"rgba(0, 0, 0, 0.25)",data:limitDataPoints(f,3e3)}]},options:{tooltips:{callbacks:{label:longDateToolTipRenderer}},scales:{xAxes:[{ticks:{callback:shortDateFormatter,min:d,max:e}}],yAxes:[{type:"logarithmic",ticks:{min:.04,max:100,callback:a=>a+""}}]}}})}function addUserInputListeners(){const a=document.querySelectorAll(".user-graph");for(let b=0;b<a.length;b+=1){const c=a[b];c.addEventListener("change",async()=>{const a=+document.querySelector(".user-graph.from").value,b=+document.querySelector(".user-graph.to").value;if(a<=b){const c=await getUserData();populateUserSignup(c,(c,d,e)=>{const f=e[0].signupTime,g=e[e.length-1].signupTime,h=map(a,0,1,f,g),i=map(b,0,1,f,g);return c.signupTime>=h&&c.signupTime<=i})}})}}async function populateUserSignupHistory(a){const b=[],c=a.sort((c,a)=>c.signupTime>a.signupTime?1:-1);let d=0,e=c[0].signupTime,f=c[0].signupTime;for(let g=0;g<c.length;g+=1){const a=c[g];e=Math.min(e,a.signupTime),f=Math.max(f,a.signupTime),b.push({y:d,x:a.signupTime}),d+=1}const g=limitDataPoints(b,500);renderLineChart("userSignupHistory",g,{xMin:e,xMax:f,xTickRenderer:shortDateFormatter,tooltipRenderer:longDateToolTipRenderer})}function renderPlatformsChart(a){const b=a.map(a=>a.data.platform),c=b.reduce((a,b)=>(addOrIncrement(a,b),a),{}),d=Object.entries(c).map(([a,b])=>({y:b,indexLabel:a}));renderPieChart("platforms",d)}function renderLanguagesChart(a){const b=a.map(a=>a.data.language),c=b.reduce((a,b)=>(addOrIncrement(a,b),a),{}),d=Object.entries(c).map(([a,b])=>({y:b,indexLabel:a}));renderPieChart("languages",d)}function renderReferrersChart(a){const b=a.map(a=>a.data.referrer.replace(/(http:\/\/|https:\/\/)/g,"").replace(/\/(.*)$/,"")),c=b.reduce((a,b="noReferrer")=>(addOrIncrement(a,b),a),{}),d=Object.entries(c).map(([a,b])=>({y:b,indexLabel:a}));renderPieChart("referrers",d)}function renderTimeToLoadChart(a){const b=a.reduce((a,b)=>{if(b.data.url){const c=new URL(b.data.url).pathname;a[c]?a[c].push(b):a[c]=[b]}else a.noUrl?a.noUrl.push(b):a.noUrl=[b];return a},{}),c=Object.keys(b),d=Object.values(b),e=[];for(let b=0;b<c.length;b+=1){const a=c[b],f=d[b].reduce((a,b)=>a+b.data.timeToLoad,0);e.push({url:a,time:f/d[b].length})}const f=e.sort((c,a)=>c.time>a.time?1:-1),g=f.map(a=>({y:a.time,indexLabel:a.url}));renderColumnChart("timePerPage",g)}function renderWeeklyUsageChart(a){const b=a.reduce((a,b)=>{if(b.data.time){const c=new Date(b.data.time).getDay();addOrIncrement(a,c)}return a},{}),c=Object.keys(b),d=Object.values(b),e=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],f=[];for(let b=0;b<c.length;b+=1)f.push({y:d[b],indexLabel:e[c[b]]});f.push(f.shift()),renderColumnChart("weeklyUsage",f)}function renderAlltimeUsageChart(a){const b=a.reduce((a,b)=>{const c=new Date(b.data.time).setHours(0,0,0,0),d=Object.assign({},a);return d[c]||(d[c]=[]),d[c].push(b),d},[]);Object.entries(b).forEach(([a,c])=>{b[a]=c.reduce((a,b)=>{const c=Object.assign({},a);return b.userId&&!c.userIds.find(a=>a===b.userId)&&(c.uniqueUsers+=1,c.userIds.push(b.userId)),c},{uniqueUsers:0,userIds:[]}).uniqueUsers});let c=Object.entries(b).map(([a,b])=>({y:b,x:+a}));c=c.sort((c,a)=>c.x>a.x?1:-1),renderLineChart("alltimeUsage",c,{xTickRenderer:shortDateFormatter,tooltipRenderer:longDateToolTipRenderer})}function renderScreenSizeCanvas(a,b){const d=document.querySelector(a),e=d.getContext("2d"),c=d.width;let f=0,g=0;b.forEach(a=>{f=Math.max(f,a.x,a.y),g+=a.count});const h=b.map(a=>({x:a.x/f,y:a.y/f,count:a.count}));h.forEach(a=>{e.fillStyle=`rgba(225,64,64,${a.count/g})`,e.fillRect(0,0,a.x*c,a.y*c)})}function renderScreenSizeChart(a){const b=a.reduce((a,b)=>{if(b.data.time){const c=`${b.data.windowDimensions.width}x${b.data.windowDimensions.height}`;addOrIncrement(a,c)}return a},{}),c=Object.keys(b),d=Object.values(b),e=[];for(let b=0;b<c.length;b+=1)e.push({y:c[b].substr(c[b].indexOf("x")+1),x:c[b].substr(0,c[b].indexOf("x")),count:d[b]});renderScreenSizeCanvas("#screenSize",e)}async function sessionPathAnalysis(a){const b=a.reduce((a,b)=>{const c=Object.assign({},a);return b.sessionId&&(!c[b.sessionId]&&(c[b.sessionId]=[]),c[b.sessionId].push(b)),c},[]),c=Object.values(b).reduce((a,b)=>{const c=[...a];for(let d=0;d<b.length;d+=1){const a=b[d];c[d]||(c[d]=[]),c[d].push(a)}return c},[]),d=c[0].length,e=c[0].length-c[1].length,f=c.map(a=>a.reduce((a,b)=>{const c=Object.assign({},a),d=new URL(b.data.url).pathname;return c[d]?c[d]+=1:c[d]=1,c},{})),g=c.map(a=>a.length);console.log(`Session Count: ${d}`),console.log(`Bounce Count: ${e}`),console.log(`Page Urls: ${JSON.stringify(f,null,2)}`),console.log(`Session Length Distribution: ${g}`)}async function renderAnalyticsCharts(){const a=await getAnalyticsData(),b=a.filter(a=>"browser-info"===a.type);renderReferrersChart(b),renderPlatformsChart(b),renderLanguagesChart(b),renderTimeToLoadChart(b),renderWeeklyUsageChart(b),renderAlltimeUsageChart(b),renderScreenSizeChart(b),sessionPathAnalysis(b)}async function renderUserCharts(){const a=await getUserData();populateUserSignup(a),populateUserSignupHistory(a),addUserInputListeners()}async function init(){getLogs("logs"),getErrorLogs("errorLogs"),renderUserCharts(),renderAnalyticsCharts()}loadPage().then(init);