import getQueryStringParameterByName from"../modules/QueryString.js";const priceId=getQueryStringParameterByName("priceId");main(priceId);async function main(a){if(!a)return void alert("Price not specified");const b=document.getElementById("confirm");b&&b.addEventListener("click",()=>onConfirmSubscriptionClick())}async function onConfirmSubscriptionClick(){showLoadingStatus();const{publicKey:a}=await getConfig(),{subscription:b,paymentIntent:c,paymentMethodId:d}=await createSubscription(priceId),e=Stripe(a);await handlePaymentThatRequiresCustomerAction(e,{subscriptionStatus:b.status,paymentIntent:c,paymentMethodId:d}),showSuccessStatus()}function getConfig(){return fetch("/subscription/config").then(a=>a.json())}function createSubscription(a){const b={method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify({priceId:a})};return fetch("/subscription/create",b).then(a=>a.json())}async function handlePaymentThatRequiresCustomerAction(a,{subscriptionStatus:b,paymentIntent:c,paymentMethodId:d}){if("active"!==b){const b="requires_action"===c.status||"requires_confirmation"===c.status;if(b){const b=await a.confirmCardPayment(c.client_secret,{payment_method:d});if(b.error||"succeeded"!==b.paymentIntent.status)throw showFailedStatus("An error occurred during payment"),b}}}const summaryEl=document.querySelector(".summary"),confirmEl=document.querySelector("#confirm"),errorEl=document.querySelector(".status-error"),successEl=document.querySelector(".status-success");function showLoadingStatus(){removeAllStatuses(),summaryEl.classList.add("status-loading")}function showFailedStatus(a){removeAllStatuses(),confirmEl.classList.add("disabled"),errorEl.classList.add("visible"),setErrorMessage(a)}function setErrorMessage(a){const b=document.querySelector(".status-error p");b.textContent=a}function showSuccessStatus(){removeAllStatuses(),confirmEl.classList.add("disabled"),successEl.classList.add("visible")}function removeAllStatuses(){successEl.classList.remove("visible"),errorEl.classList.remove("visible"),summaryEl.classList.remove("status-loading")}